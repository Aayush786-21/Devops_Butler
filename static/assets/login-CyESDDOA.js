import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css               */let m=!0;document.addEventListener("DOMContentLoaded",()=>{const s=document.getElementById("toggleLink");s&&s.addEventListener("click",n=>{n.preventDefault(),f()}),k(),I()});function f(){const s=document.getElementById("loginForm"),n=document.getElementById("registerForm"),e=document.getElementById("toggleText"),r=document.getElementById("toggleLink");m?(s.style.display="none",n.style.display="block",e.textContent="Already have an account? ",r.textContent="Sign in",m=!1):(n.style.display="none",s.style.display="block",e.textContent="Don't have an account? ",r.textContent="Sign up",m=!0),p()}function p(){document.getElementById("loginError").style.display="none",document.getElementById("registerError").style.display="none",document.getElementById("registerSuccess").style.display="none"}function d(s,n="info"){console.log(`[${n.toUpperCase()}] ${s}`);const e=document.getElementById("toast");e&&(e.textContent=s,e.className=`toast toast-${n}`,e.style.display="block",setTimeout(()=>{e.style.display="none"},3e3))}function g(s,n,e,r="Loading...",a=""){const l=document.getElementById(s),t=document.getElementById(n);e?(l.disabled=!0,t.textContent=r):(l.disabled=!1,t.textContent=a)}function k(){const s=document.getElementById("loginForm");s&&s.addEventListener("submit",async r=>{var u,o;r.preventDefault();const a=(u=document.getElementById("loginUsername"))==null?void 0:u.value,l=(o=document.getElementById("loginPassword"))==null?void 0:o.value,t=document.getElementById("loginError");if(!a||!l){t&&(t.textContent="Please enter both username and password.",t.style.display="block");return}t&&(t.style.display="none"),g("loginBtn","loginBtnText",!0,"Signing In...","Sign In");try{const i=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:a,password:l})}),c=await i.json();if(i.ok){localStorage.setItem("access_token",c.access_token),localStorage.setItem("authToken",c.access_token),localStorage.setItem("username",c.username),localStorage.setItem("authProvider","local"),d("Login successful! Redirecting...","success");const h=new URLSearchParams(window.location.search).get("redirect")||"/";setTimeout(()=>{window.location.href=h},1e3)}else t&&(t.textContent=c.detail||"Login failed. Please try again.",t.style.display="block")}catch(i){console.error("Login error:",i),t&&(t.textContent="Network error. Please try again.",t.style.display="block")}finally{g("loginBtn","loginBtnText",!1,"Signing In...","Sign In")}});const n=document.getElementById("registerForm");n&&n.addEventListener("submit",async r=>{r.preventDefault();const a=document.getElementById("registerUsername").value,l=document.getElementById("registerEmail").value,t=document.getElementById("registerPassword").value,u=document.getElementById("registerConfirmPassword").value,o=document.getElementById("registerError"),i=document.getElementById("registerSuccess");if(o&&(o.style.display="none"),i&&(i.style.display="none"),t!==u){o&&(o.textContent="Passwords do not match.",o.style.display="block");return}if(t.length<6){o&&(o.textContent="Password must be at least 6 characters long.",o.style.display="block");return}g("registerBtn","registerBtnText",!0,"Creating Account...","Create Account");try{const c=await fetch("/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:a,email:l,password:t})}),y=await c.json();c.ok?(i&&(i.textContent="Account created successfully! You can now sign in.",i.style.display="block"),n.reset(),setTimeout(()=>{f()},2e3)):o&&(o.textContent=y.detail||"Registration failed. Please try again.",o.style.display="block")}catch(c){console.error("Registration error:",c),o&&(o.textContent="Network error. Please try again.",o.style.display="block")}finally{g("registerBtn","registerBtnText",!1,"Creating Account...","Create Account")}});const e=document.getElementById("githubLoginBtn");e&&e.addEventListener("click",async()=>{try{const r=await fetch("/api/auth/github"),a=await r.json();r.ok&&a.auth_url?window.location.href=a.auth_url:d("GitHub OAuth is not configured. Please contact administrator.","error")}catch(r){console.error("GitHub OAuth error:",r),d("Failed to initiate GitHub login","error")}})}function w(){const n=new URLSearchParams(window.location.search).get("code");n&&fetch(`/api/auth/github/callback?code=${n}`).then(e=>e.json()).then(e=>{if(e.access_token){localStorage.setItem("access_token",e.access_token),localStorage.setItem("authToken",e.access_token),localStorage.setItem("username",e.username),localStorage.setItem("authProvider",e.auth_provider),d("GitHub login successful! Redirecting...","success");const a=new URLSearchParams(window.location.search).get("redirect")||"/";setTimeout(()=>{window.location.href=a},1e3)}else d("GitHub authentication failed","error")}).catch(e=>{console.error("GitHub callback error:",e),d("GitHub authentication failed","error")})}function I(){if(localStorage.getItem("access_token")||localStorage.getItem("authToken")){const e=new URLSearchParams(window.location.search).get("redirect")||"/";window.location.href=e}else w()}
